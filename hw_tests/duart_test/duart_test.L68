00000208 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 7/11/2024 3:38:04 PM

00000000  =00100000                  1  DUART   EQU     $00100000  loaded in A0 when needed, regs are offsets 
00000000  =00000001                  2  MR1A    EQU     1   Mode Register1 
00000000  =00000001                  3  MR2A    EQU     1   points here after MR1A is set 
00000000  =00000003                  4  SRA     EQU     3   Status Register (read) 
00000000  =00000003                  5  CSRA    EQU     3   Clock Select Register 
00000000  =00000005                  6  CRA     EQU     5   Command Register 
00000000  =00000007                  7  TBA     EQU     7   Transfer Holding Register 
00000000  =00000007                  8  RBA     EQU     7   Receive Holding Register 
00000000  =00000009                  9  ACR     EQU     9   Auxiliary control register 
00000000  =0000000B                 10  IMR     EQU     11  Interrupt Mask Register
00000000                            11  
00000000  =00000000                 12  RxRDY   EQU     0   Recieve ready bit position 
00000000  =00000002                 13  TxRDY   EQU     2   Transmit ready bit position 
00000000  =000000CC                 14  BAUD    EQU     $CC baud rate value = 19,200 baud 
00000000  =0008FFF0                 15  SUPER_STACK EQU $8FFF0
00000000                            16  
00000000                            17  
00000000                            18      ORG $000000
00000000                            19  START
00000000= 0008FFF0                  20      DC.L SUPER_STACK
00000004= 00000200                  21      DC.L INIT
00000008                            22      
00000200                            23      ORG $000200
00000200                            24  INIT    
00000200  4E71                      25      NOP 
00000202  4EB9 00000216             26      JSR INIT_DUART
00000208                            27  LOOP
00000208  123C 0037                 28      MOVE.B #$37, D1
0000020C  4EB9 00000276             29      JSR PUT_CHAR
00000212  4EF8 0208                 30      JMP LOOP
00000216                            31  
00000216                            32  INIT_DUART 
00000216  41F9 00100000             33      LEA     DUART,A0        A0 points to base DUART address 
0000021C                            34  
0000021C                            35  ; Software reset: 
0000021C  117C 0050 0005            36      MOVE.B  #$50,CRA(A0)    Reset Break Change Interrupt
00000222  117C 0040 0005            37      MOVE.B  #$40,CRA(A0)    Reset Error Status
00000228  117C 0030 0005            38      MOVE.B  #$30,CRA(A0)    Reset TxA 
0000022E  117C 0020 0005            39      MOVE.B  #$20,CRA(A0)    Reset RxA 
00000234  117C 0010 0005            40      MOVE.B  #$10,CRA(A0)    Reset MRA pointer 
0000023A                            41  
0000023A                            42  ; Initialization:
0000023A  117C 0000 000B            43      MOVE.B  #$00,IMR(A0)    disables IMR
00000240  117C 0080 0009            44      MOVE.B  #$80,ACR(A0)    selects baud rate set 2
00000246  117C 00CC 0003            45      MOVE.B  #BAUD,CSRA(A0) set 19.2k baud Rx/Tx 
0000024C  117C 0013 0001            46      MOVE.B  #$13,MR1A(A0)   8-bits, no parity, 1 stop bit 
00000252                            47  
00000252                            48   
00000252                            49  ; This is the most important register to set in the 68681 DUART. 
00000252                            50  ; 07 sets: Normal mode, CTS and RTS disabled, stop bit length = 1 
00000252                            51  ; For testing load $#47 to enable auto-echo 
00000252                            52  
00000252  117C 0007 0001            53      MOVE.B  #$07,MR2A(A0)    
00000258  117C 0005 0005            54      MOVE.B  #$05,CRA(A0)    enable Tx and Rx 
0000025E  4E75                      55      RTS     
00000260                            56      
00000260                            57  GET_CHAR
00000260  1028 0003                 58      MOVE.B  SRA(A0),D0
00000264  0800 0000                 59      BTST    #0,D0 
00000268  67F6                      60      BEQ     GET_CHAR
0000026A  1228 0007                 61      MOVE.B  RBA(A0),D1 
0000026E  4EB9 00000276             62      JSR     PUT_CHAR
00000274  4E75                      63      RTS 
00000276                            64  
00000276                            65  
00000276                            66  PUT_CHAR
00000276  1028 0003                 67      MOVE.B  SRA(A0),D0 
0000027A  0800 0002                 68      BTST    #2,D0 
0000027E  67F6                      69      BEQ     PUT_CHAR
00000280  1141 0007                 70      MOVE.B  D1,TBA(A0) 
00000284  4E75                      71      RTS
00000286                            72      
00000286                            73      END LOOP

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ACR                 9
BAUD                CC
CRA                 5
CSRA                3
DUART               100000
GET_CHAR            260
IMR                 B
INIT                200
INIT_DUART          216
LOOP                208
MR1A                1
MR2A                1
PUT_CHAR            276
RBA                 7
RXRDY               0
SRA                 3
START               0
SUPER_STACK         8FFF0
TBA                 7
TXRDY               2
